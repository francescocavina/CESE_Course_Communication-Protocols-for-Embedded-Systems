/*
 * port.c
 *
 *  Created on: Apr 13, 2023
 *      Author: Francesco Cavina
 *      E-mail: francescocavina@outlook.com
 */

/* Includes ------------------------------------------------------------------*/
#include <ssd1306_port.h>
#include "stm32f4xx_hal.h"


/* Private variables ---------------------------------------------------------*/
I2C_HandleTypeDef hi2c1;


/* Private function prototypes -----------------------------------------------*/
static void Error_Handler(void);
static void MX_I2C1_Init(void);


/* Private function definitions ----------------------------------------------*/

/**
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void) {

  hi2c1.Instance = I2C1;
  hi2c1.Init.ClockSpeed = 400000;
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
  hi2c1.Init.OwnAddress1 = 0;
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
  hi2c1.Init.OwnAddress2 = 0;
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;

  if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
    Error_Handler();
  }
}

/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
static void Error_Handler(void) {
  while (1)
  {
  }
}


/* Public function definitions -----------------------------------------------*/

uint8_t ssd1306_I2C_Init(uint8_t address) {
	MX_I2C1_Init();
	uint32_t p = 250000;
	while(p>0)
		p--;

	/* Check if LCD connected to I2C */
	if (HAL_I2C_IsDeviceReady(&hi2c1, address, 1, 20000) != HAL_OK) {
		/* Return false */
		return 0;
	}

	return 1;
}

void ssd1306_I2C_WriteMulti(uint8_t address, uint8_t reg, uint8_t* data, uint16_t count) {
	uint8_t dt[256];
	dt[0] = reg;
	uint8_t i;
	for(i = 0; i < count; i++)
	dt[i+1] = data[i];
	HAL_I2C_Master_Transmit(&hi2c1, address, dt, count+1, 10);
}

void ssd1306_I2C_Write(uint8_t address, uint8_t reg, uint8_t data) {
	uint8_t dt[2];
	dt[0] = reg;
	dt[1] = data;
	HAL_I2C_Master_Transmit(&hi2c1, address, dt, 2, 10);
}
