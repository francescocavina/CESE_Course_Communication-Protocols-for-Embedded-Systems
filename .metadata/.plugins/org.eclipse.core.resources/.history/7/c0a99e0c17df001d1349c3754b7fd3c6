/*
 * API_displayOLED.c
 *
 *  Created on: Apr 14, 2023
 *      Author: Francesco Cavina <francescocavina@outlook.com>
 */

/* Includes ------------------------------------------------------------------*/
#include "API_displayOLED.h"


/* Private defines -----------------------------------------------------------*/
#define OUTER_CIRCLE_ORIGIN_X	64
#define	OUTER_CIRCLE_ORIGIN_Y	32
#define OUTER_CIRCLE_RADIUS	31


/* Public function definitions -----------------------------------------------*/
void displayInit(void) {

	/* Initialize OLED display */
	/* Use of SSD1306 Driver */
	SSD1306_Init();

	/* Print "Welcome Message" */
	SSD1306_Clear();
	SSD1306_GotoXY (26, 6);
	SSD1306_Puts ((uint8_t*) "Digital", &Font_11x18, SSD1306_COLOR_BLUE);
	SSD1306_GotoXY (26, 40);
	SSD1306_Puts ((uint8_t*) "Compass", &Font_11x18, SSD1306_COLOR_BLUE);
	SSD1306_UpdateScreen();
	HAL_Delay(2500);

	SSD1306_Clear();
	SSD1306_GotoXY (53, 23);
	SSD1306_Puts ((uint8_t*) "by", &Font_11x18, SSD1306_COLOR_BLUE);
	SSD1306_UpdateScreen();
	HAL_Delay(1000);

	SSD1306_Clear();
	SSD1306_GotoXY (15, 6);
	SSD1306_Puts ((uint8_t*) "Francesco", &Font_11x18, SSD1306_COLOR_BLUE);
	SSD1306_GotoXY (31, 40);
	SSD1306_Puts ((uint8_t*) "Cavina", &Font_11x18, SSD1306_COLOR_BLUE);
	SSD1306_UpdateScreen();
	HAL_Delay(2500);

	SSD1306_Clear();
}

void drawOuterCircle(void) {

	/* Draw compass outer circle | Use of SSD1306 Driver */
	SSD1306_Clear();
	SSD1306_DrawCircle(OUTER_CIRCLE_ORIGIN_X, OUTER_CIRCLE_ORIGIN_Y, OUTER_CIRCLE_RADIUS, 0x01);
	SSD1306_UpdateScreen();
}

void drawArrow(double angle, SSD1306_COLOR_t color) {

	uint8_t x2, y2 = 0;

	/* Check if first parameter (angle in degrees) is valid */
	if(angle >= 0 && angle <= 2 * PI) {

		/* Check if second parameter (color) is valid */
		if(color == SSD1306_COLOR_BLACK || color == SSD1306_COLOR_BLUE) {

			/* Determine final arrow coordinates on display */
			x2 = OUTER_CIRCLE_ORIGIN_X + (OUTER_CIRCLE_RADIUS - 3) * cos(angle);
			y2 = OUTER_CIRCLE_ORIGIN_Y - (OUTER_CIRCLE_RADIUS - 3) * sin(angle);

			/* Draw arrow line | Use of SSD1306 Driver */
			SSD1306_DrawLine(OUTER_CIRCLE_ORIGIN_X, OUTER_CIRCLE_ORIGIN_Y, x2, y2, color);
			SSD1306_UpdateScreen();
		}
	}
}

void writeData(int16_t x, int16_t y, int16_t z) {

	uint8_t xField[30] = "In X: ";
	uint8_t yField[30] = "In Y: ";
	uint8_t zField[30] = "In Z: ";

	if(x >= 0) {
		strcat((char *) xField, " ");
	}

	if(y >= 0) {
		strcat((char *) yField, " ");
	}

	if(z >= 0) {
		strcat((char *) zField, " ");
	}

	uint8_t xStr[10];
	uint8_t yStr[10];
	uint8_t zStr[10];

	SSD1306_Clear();

	/* Convert numerical raw data to string */
	itoa(x, (char *) xStr, 10);
	itoa(y, (char *) yStr, 10);
	itoa(z, (char *) zStr, 10);

	/* Assemble messages to print on display */
	strcat((char *) xField, (const char *) xStr);
	strcat((char *) yField, (const char *) yStr);
	strcat((char *) zField, (const char *) zStr);

	/* Write title */
	SSD1306_GotoXY(1, 0);
	SSD1306_Puts((uint8_t*) "- Magnetic Field -", &Font_7x10, SSD1306_COLOR_BLUE);

	/* Write raw data */
	SSD1306_GotoXY(14, 21);
	SSD1306_Puts(xField, &Font_7x10, SSD1306_COLOR_BLUE);

	SSD1306_GotoXY(14, 37);
	SSD1306_Puts(yField, &Font_7x10, SSD1306_COLOR_BLUE);

	SSD1306_GotoXY(14, 53);
	SSD1306_Puts(zField, &Font_7x10, SSD1306_COLOR_BLUE);


	SSD1306_GotoXY(92, 21);
	SSD1306_Puts(" uT", &Font_7x10, SSD1306_COLOR_BLUE);

	SSD1306_GotoXY(92, 37);
	SSD1306_Puts(" uT", &Font_7x10, SSD1306_COLOR_BLUE);

	SSD1306_GotoXY(92, 53);
	SSD1306_Puts(" uT", &Font_7x10, SSD1306_COLOR_BLUE);


	SSD1306_UpdateScreen();
}
