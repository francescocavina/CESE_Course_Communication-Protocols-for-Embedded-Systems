/*
 * API_magnetometer.c
 *
 *  Created on: Apr 17, 2023
 *      Author: Francesco Cavina <francescocavina@outlook.com>
 */


/* Includes ------------------------------------------------------------------*/
#include "API_magnetometer.h"


/* Private defines -----------------------------------------------------------*/
#define PI	3.141592654


/* Public function definitions -----------------------------------------------*/
void magnetometerInit(void) {


}

void readMagnetometer(magnetometer_t *sensor) {

	srand(HAL_GetTick());

	int16_t newValueX = rand() % 9600 - 4800;
	int16_t newValueY = rand() % 9600 - 4800;
	int16_t newValueZ = rand() % 9600 - 4800;

	if(newValueX != sensor->lastValueX || newValueY != sensor->lastValueY || newValueZ != sensor->lastValueZ) {
		sensor->lastValueX = newValueX;
		sensor->lastValueY = newValueY;
		sensor->lastValueZ = newValueZ;
		sensor->UPDATE_FLAG = true;
	} else {
		sensor->UPDATE_FLAG = false;
	}
}

void calculateArrowAngle(magnetometer_t *sensor) {

	double ang = 0;

	ang = atan((double)sensor->lastValueY / sensor->lastValueX);

	if((sensor->lastValueX >= 0 && sensor->lastValueY >= 0) || (sensor->lastValueX >= 0 && sensor->lastValueY < 0)) {
		sensor->carrowAngle = ang;
	} else if((sensor->lastValueX < 0 && sensor->lastValueY >= 0) || (sensor->lastValueX < 0 && sensor->lastValueY < 0)) {
		sensor->arrowAngle = PI + ang;
	}

	if(sensor->arrowAngle < 0) {
		sensor->arrowAngle += 2 * PI;
	}
}
