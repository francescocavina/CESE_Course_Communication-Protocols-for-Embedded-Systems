/*
 * mpu9250.c
 *
 *  Created on: Apr 17, 2023
 *      Author: Francesco Cavina <francescocavina@outlook.com>
 */


/* Includes ------------------------------------------------------------------*/
#include "mpu9250.h"


/* Private defines -----------------------------------------------------------*/
/* AK8963 registers */
#define AK8963_WHO_AM_I  0x00	// (R) Default is 0x48
#define AK8963_INFO      0x01	// (R) Device information
#define AK8963_ST1       0x02  	// (R) Data ready bit 0
#define AK8963_XOUT_L    0x03  	// (R) HXL[7:0]: X-axis measurement data lower 8bit
#define AK8963_XOUT_H    0x04	// (R) HXH[15:8]: X-axis measurement data higher 8bit
#define AK8963_YOUT_L    0x05	// (R) HYL[7:0]: Y-axis measurement data lower 8bit
#define AK8963_YOUT_H    0x06	// (R) HYH[15:8]: Y-axis measurement data higher 8bit
#define AK8963_ZOUT_L    0x07	// (R) HZL[7:0]: Z-axis measurement data lower 8bit
#define AK8963_ZOUT_H    0x08	// (R) HZH[15:8]: Z-axis measurement data higher 8bit
#define AK8963_ST2       0x09	// (R) Data overflow
#define AK8963_CNTL      0x0A	// (R) Power down (0000), single-measurement (0001), self-test (1000) and Fuse ROM (1111) modes on bits 3:0
#define AK8963_ASTC      0x0C	// Self test control
#define AK8963_I2CDIS    0x0F	// I2C disable
#define AK8963_ASAX      0x10	// X-axis sensitivity adjustment value
#define AK8963_ASAY      0x11	// Y-axis sensitivity adjustment value
#define AK8963_ASAZ      0x12	// Z-axis sensitivity adjustment value


/* Private variables ---------------------------------------------------------*/
static double magX = 0;
static double magY = 0;
static double magZ = 0;


/* Public function definitions -----------------------------------------------*/
uint8_t MPU9250_Init(void) {

	/* Initialize I2C */
	/* If not successful */
	if(!mpu9250_SPI_Init()) {
			return 0;
	}
	return 0; // FIX THIS
}

uint16_t MPU9250_WhoAmI() {

	uint16_t data = 0;

	mpu9250_SPI_Write(AK8963_WHO_AM_I);
	//mpu9250_SPI_Read(&data);

	return data;
}
